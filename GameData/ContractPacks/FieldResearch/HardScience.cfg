// Contract for doing difficult situation/biome combinations.
//   Author: nightingale

CONTRACT_TYPE
{
    name = FS_HardScience
    group = FieldResearch

    sortKey = 05
    genericTitle = Gather rare science results
    genericDescription = Run experiments while landed on the ocean, or on the water in a desert.  THe right locations are out there!

    title = Gather rare science results from @biome.FullName()
    description = @isLanded ? @landStr : @waterStr
    synopsis = Run the requested experiments while @situation.ToString().ToLower() at @biome.FullName().
    completedMessage = This is some great data that we've accumulated!

    // No more than one of these
    maxSimultaneous = 1

    prestige = Significant
    prestige = Exceptional

    // Always offered by the Field Research Team
    agent = Field Research Team

    targetBody = @/ss0.CelestialBody()

    // Contract rewards
    rewardFunds = Random(35000.0, 40000.0)
    rewardReputation = Random(7.5, 15.0)

    DATA
    {
        type = string
        hidden = true

        water = @isNotWater ? "whatever passes for water on @targetBody" : "water"
        waterStr = They say that it's difficult to find @water at @biome.FullName().  We've mapped out a few locations where there might be some.  Find a suitable spot and run some experiments.
        landStr = They say there isn't much land at @biome.FullName().  We've mapped out a few locations where there might be some.  Find a suitable spot and run some experiments.

        sitStr = @isLanded ? "Landing" : "Splashdown"
    }

    DATA
    {
        type = Biome
        hidden = true

        biome = @ss0.Biome()
    }

    DATA
    {
        type = ExperimentSituations
        hidden = true

        situation = @ss0.Situation()
    }

    DATA
    {
        type = bool
        isLanded = @situation == SrfLanded
    }

    DATA:NEEDS[!RealSolarSystem,!GPP]
    {
        type = bool

        isNotWater = @targetBody == Eve
    }

    DATA:NEEDS[RealSolarSystem]
    {
        type = bool

        isNotWater = @targetBody == Titan
    }
	
	DATA:NEEDS[GPP]
    {
        type = bool

        isNotWater = @targetBody == Tarsiss || @targetBody == Hadrian
    }

    DATA
    {
        type = List<CelestialBody>
        hidden = true

        validBodies = Prestige() == Significant ? [ HomeWorld() ] : OrbitedBodies().Exclude(HomeWorld())
    }

    DATA
    {
        type = List<ScienceSubject>
        hidden = true

        ssTemp1 = DifficultScienceSubjectsByBody(@validBodies)
        ssTemp2 = @ssTemp1.Where(s => s.RemainingScience() > 0.0 && s.Experiment() != asteroidSample)
    }

    DATA
    {
        type = ScienceSubject
        hidden = true

        ss0 = @ssTemp2.Random()
    }

    DATA
    {
        type = List<ScienceSubject>
        title = Must have a valid experiment to run in a rare situation

        scienceSubjectsTemp1 = DifficultScienceSubjects().Where(s => s.Biome() == @biome)
        scienceSubjectsTemp2 = @scienceSubjectsTemp1.Where(s => s.Situation() == @situation)
        scienceSubjects = @scienceSubjectsTemp2.Where(s => s.CollectedScience() == 0.0 && s.Experiment() != asteroidSample).Random(3)
    }

    DATA
    {
        type = List<Location>
        hidden = true

        locations = @biome.DifficultLocations()
    }

    DATA
    {
        type = Location
        requiredValue = false

        loc0 = @locations.ElementAt(0)
        loc1 = @locations.ElementAt(1)
        loc2 = @locations.ElementAt(2)
    }

    DATA
    {
        type = ScienceRecoveryMethod
        recoveryMethod = @targetBody.IsHomeWorld() || @targetBody.Parent().IsHomeWorld() ? Ideal : RecoverOrTransmit
    }

    PARAMETER
    {
        name = CollectScience
        type = CollectScience

        subject = @/scienceSubjects
    }

    BEHAVIOUR
    {
        name = WaypointGenerator
        type = WaypointGenerator

        WAYPOINT
        {
            name = "Suggested @/biome.Name() @/sitStr"
            icon = ContractPacks/FieldResearch/Icons/research

            latitude = @/loc0.Latitude()
            longitude = @/loc0.Longitude()
            altitude = 0.0
        }

        WAYPOINT
        {
            name = "Suggested @/biome.Name() @/sitStr"
            icon = ContractPacks/FieldResearch/Icons/research

            hidden = @/locations.Count() < 2

            latitude = @/loc1.Latitude()
            longitude = @/loc1.Longitude()
            altitude = 0.0
        }

        WAYPOINT
        {
            name = "Suggested @/biome.Name() @/sitStr"
            icon = ContractPacks/FieldResearch/Icons/research

            hidden = @/locations.Count() < 3

            latitude = @/loc2.Latitude()
            longitude = @/loc2.Longitude()
            altitude = 0.0
        }
    }

    REQUIREMENT
    {
        type = ReachSpace
    }
}
